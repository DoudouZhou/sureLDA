
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # install.packages(c("randomForest","data.table","topicmodels"), repos = "http://cran.us.r-project.org")
> 
> library(Matrix)
> library(flexmix)
Loading required package: lattice
> library(stats)
> library(abind)
> # library(Cairo)
> library(glmnet)
Loading required package: foreach
Loaded glmnet 2.0-18

> library(PRROC)
> library(Rcpp)
> library(tidyr)

Attaching package: ‘tidyr’

The following objects are masked from ‘package:Matrix’:

    expand, pack, unpack

> library(tidytext)
> library(bindata) ##For Multiple Y
> library(reliaR)  ##For log.gamma
> 
> source('../R/sureLDA.R')
> 
> 
> Simulate<-function(N=10000,K=10,M=50){
+   ##Generate Paramters
+   Alpha <- rep(0.3,K)
+   Beta <- rep(0.25,K)
+   Lambda <- matrix(rep(0.2,M*K-2*K))
+ 
+   mu_positive <- rbind(
+     t(sapply(1:5,function(o) c(4.5,2.1,seq(1.9,1.7,length=M-2)))),
+     t(sapply(6:K,function(o) c(4.5,2.1,seq(1.9,1.7,length=M-2)))) )
+   mu_negative <- rbind(
+     t(sapply(1:5,function(o) c(0.51,0.81,seq(0.85,0.82,length=M-2)))),
+     t(sapply(6:K,function(o) c(0.51,0.81,seq(0.85,0.81,length=M-2)))) )
+   
+   ##Prior Probability of Y
+   Pi <- c(0.4,0.2,0.15,0.13,0.1,0.03,0.03,0.03,0.03,0.03)
+ 
+   ##Correlation of Multiple Y
+   sigma <- matrix(0, K, K)
+   sigma[1,2] <- 0.5
+   sigma[2,1] <- 0.5
+   diag(sigma)<-1
+   ##Generate Y
+   Y <- rmvbin(N, margprob=Pi, sigma=sigma)
+   Y_table = apply(Y,1,function(x){t(2^(0:(K-1)))%*%t(t(x))})
+   table(Y_table)
+   length(table(Y_table))
+   
+   ##Generate X
+   H <- rpois(N,lambda = 2)
+   random <- t(apply(Y,1,function(y){
+     t(sapply(1:K, function(i){
+       yi = y[i]
+       if(yi==1) rgamma(M, scale=mu_positive[i,], shape=1)
+       else rgamma(M, scale=mu_negative[i,], shape=1)
+     }))
+   }))
+   
+   logX <- cbind(log(H+1)%*%t(Alpha),log(H+1)%*%t(Beta),log(H+1)%*%t(Lambda)) + log(random)
+   X <- floor(exp(logX))
+   ICD <- X[,1:K] 
+   X <- cbind(H,X)
+   colnames(X) <- c('H',paste('ICD',1:K,sep=''),paste('NLP',1:K,sep=''),paste('V',1:(M*K-2*K),sep=''))
+   ##Filter is defined as ICD >= 1
+   filter <- I(ICD>=1)*1
+   
+   i = 1
+   for(i in 1:K){
+     print(table(filter[,i],Y[,i],dnn=c(paste('filter',i,sep=''),paste('Diseases',i,sep='')))/N)
+   }
+   list(X=X,Y=Y,filter=filter)
+ }
> 
> 
> N=1000  ##Number of patients
> K=10     ##Number of diseases
> M=50     ##Number of features for each diseases, two of them are ICD and NLP.
> Sim <- Simulate(N,K,M)
       Diseases1
filter1     0     1
      0 0.465 0.055
      1 0.153 0.327
       Diseases2
filter2     0     1
      0 0.611 0.030
      1 0.187 0.172
       Diseases3
filter3     0     1
      0 0.679 0.014
      1 0.188 0.119
       Diseases4
filter4     0     1
      0 0.694 0.020
      1 0.198 0.088
       Diseases5
filter5     0     1
      0 0.724 0.011
      1 0.183 0.082
       Diseases6
filter6     0     1
      0 0.740 0.007
      1 0.227 0.026
       Diseases7
filter7     0     1
      0 0.751 0.006
      1 0.222 0.021
       Diseases8
filter8     0     1
      0 0.752 0.007
      1 0.225 0.016
       Diseases9
filter9     0     1
      0 0.758 0.004
      1 0.214 0.024
        Diseases10
filter10     0     1
       0 0.731 0.005
       1 0.247 0.017
> X <- Sim$X[,-1]
> Y <- Sim$Y
> filter <-Sim$filter 
> diseases <- seq(K)
> HU <- Sim$X[,1]
> ICD <- Sim$X[,2:11]
> NLP <- Sim$X[,12:21]
> nPatients = N
> weight <- matrix(1,K*M,K)
> 
> surelda_run <- sureLDA(X,weight,ICD,NLP,HU,filter)
[1] "Starting PheNorm"
[1] "On disease 1"
[1] "On disease 2"
[1] "On disease 3"
[1] "On disease 4"
[1] "On disease 5"
[1] "On disease 6"
[1] "On disease 7"
[1] "On disease 8"
[1] "On disease 9"
[1] "On disease 10"
Initiation... 
wp[2,3]  = 31
dp[2,3]  = 0
ztot[2]  = 19594
weight[2,3]  =  1
prior[2,3]  = 0
Initiation done... 
iter 0
iter 1
iter 2
iter 3
iter 4
iter 5
iter 6
iter 7
iter 8
iter 9
iter 10
iter 11
iter 12
iter 13
iter 14
iter 15
iter 16
iter 17
iter 18
iter 19
iter 20
iter 21
iter 22
iter 23
iter 24
iter 25
iter 26
iter 27
iter 28
iter 29
iter 30
iter 31
iter 32
iter 33
iter 34
iter 35
iter 36
iter 37
iter 38
iter 39
iter 40
iter 41
iter 42
iter 43
iter 44
iter 45
iter 46
iter 47
iter 48
iter 49
iter 50
iter 51
iter 52
iter 53
iter 54
iter 55
iter 56
iter 57
iter 58
iter 59
iter 60
iter 61
iter 62
iter 63
iter 64
iter 65
iter 66
iter 67
iter 68
iter 69
iter 70
iter 71
iter 72
iter 73
iter 74
iter 75
iter 76
iter 77
iter 78
iter 79
iter 80
iter 81
iter 82
iter 83
iter 84
iter 85
iter 86
iter 87
iter 88
iter 89
iter 90
iter 91
iter 92
iter 93
iter 94
iter 95
iter 96
iter 97
iter 98
iter 99
iter 100
iter 101
iter 102
iter 103
iter 104
iter 105
iter 106
iter 107
iter 108
iter 109
iter 110
iter 111
iter 112
iter 113
iter 114
iter 115
iter 116
iter 117
iter 118
iter 119
iter 120
iter 121
iter 122
iter 123
iter 124
iter 125
iter 126
iter 127
iter 128
iter 129
iter 130
iter 131
iter 132
iter 133
iter 134
iter 135
iter 136
iter 137
iter 138
iter 139
iter 140
iter 141
iter 142
iter 143
iter 144
iter 145
iter 146
iter 147
iter 148
iter 149
Initiation... 
wp[2,3]  = 23
dp[2,3]  = 0
ztot[2]  = 19763
weight[2,3]  =  1
prior[2,3]  = 0
Initiation done... 
iter 0
iter 1
iter 2
iter 3
iter 4
iter 5
iter 6
iter 7
iter 8
iter 9
iter 10
iter 11
iter 12
iter 13
iter 14
iter 15
iter 16
iter 17
iter 18
iter 19
iter 20
iter 21
iter 22
iter 23
iter 24
iter 25
iter 26
iter 27
iter 28
iter 29
iter 30
iter 31
iter 32
iter 33
iter 34
iter 35
iter 36
iter 37
iter 38
iter 39
iter 40
iter 41
iter 42
iter 43
iter 44
iter 45
iter 46
iter 47
iter 48
iter 49
iter 50
iter 51
iter 52
iter 53
iter 54
iter 55
iter 56
iter 57
iter 58
iter 59
iter 60
iter 61
iter 62
iter 63
iter 64
iter 65
iter 66
iter 67
iter 68
iter 69
iter 70
iter 71
iter 72
iter 73
iter 74
iter 75
iter 76
iter 77
iter 78
iter 79
iter 80
iter 81
iter 82
iter 83
iter 84
iter 85
iter 86
iter 87
iter 88
iter 89
iter 90
iter 91
iter 92
iter 93
iter 94
iter 95
iter 96
iter 97
iter 98
iter 99
iter 100
iter 101
iter 102
iter 103
iter 104
iter 105
iter 106
iter 107
iter 108
iter 109
iter 110
iter 111
iter 112
iter 113
iter 114
iter 115
iter 116
iter 117
iter 118
iter 119
iter 120
iter 121
iter 122
iter 123
iter 124
iter 125
iter 126
iter 127
iter 128
iter 129
iter 130
iter 131
iter 132
iter 133
iter 134
iter 135
iter 136
iter 137
iter 138
iter 139
iter 140
iter 141
iter 142
iter 143
iter 144
iter 145
iter 146
iter 147
iter 148
iter 149
Initiation... 
wp[2,3]  = 23
dp[2,3]  = 0
ztot[2]  = 19765
weight[2,3]  =  1
prior[2,3]  = 0
Initiation done... 
iter 0
iter 1
iter 2
iter 3
iter 4
iter 5
iter 6
iter 7
iter 8
iter 9
iter 10
iter 11
iter 12
iter 13
iter 14
iter 15
iter 16
iter 17
iter 18
iter 19
iter 20
iter 21
iter 22
iter 23
iter 24
iter 25
iter 26
iter 27
iter 28
iter 29
iter 30
iter 31
iter 32
iter 33
iter 34
iter 35
iter 36
iter 37
iter 38
iter 39
iter 40
iter 41
iter 42
iter 43
iter 44
iter 45
iter 46
iter 47
iter 48
iter 49
iter 50
iter 51
iter 52
iter 53
iter 54
iter 55
iter 56
iter 57
iter 58
iter 59
iter 60
iter 61
iter 62
iter 63
iter 64
iter 65
iter 66
iter 67
iter 68
iter 69
iter 70
iter 71
iter 72
iter 73
iter 74
iter 75
iter 76
iter 77
iter 78
iter 79
iter 80
iter 81
iter 82
iter 83
iter 84
iter 85
iter 86
iter 87
iter 88
iter 89
iter 90
iter 91
iter 92
iter 93
iter 94
iter 95
iter 96
iter 97
iter 98
iter 99
iter 100
iter 101
iter 102
iter 103
iter 104
iter 105
iter 106
iter 107
iter 108
iter 109
iter 110
iter 111
iter 112
iter 113
iter 114
iter 115
iter 116
iter 117
iter 118
iter 119
iter 120
iter 121
iter 122
iter 123
iter 124
iter 125
iter 126
iter 127
iter 128
iter 129
iter 130
iter 131
iter 132
iter 133
iter 134
iter 135
iter 136
iter 137
iter 138
iter 139
iter 140
iter 141
iter 142
iter 143
iter 144
iter 145
iter 146
iter 147
iter 148
iter 149
Initiation... 
wp[2,3]  = 28
dp[2,3]  = 0
ztot[2]  = 19678
weight[2,3]  =  1
prior[2,3]  = 0
Initiation done... 
iter 0
iter 1
iter 2
iter 3
iter 4
iter 5
iter 6
iter 7
iter 8
iter 9
iter 10
iter 11
iter 12
iter 13
iter 14
iter 15
iter 16
iter 17
iter 18
iter 19
iter 20
iter 21
iter 22
iter 23
iter 24
iter 25
iter 26
iter 27
iter 28
iter 29
iter 30
iter 31
iter 32
iter 33
iter 34
iter 35
iter 36
iter 37
iter 38
iter 39
iter 40
iter 41
iter 42
iter 43
iter 44
iter 45
iter 46
iter 47
iter 48
iter 49
iter 50
iter 51
iter 52
iter 53
iter 54
iter 55
iter 56
iter 57
iter 58
iter 59
iter 60
iter 61
iter 62
iter 63
iter 64
iter 65
iter 66
iter 67
iter 68
iter 69
iter 70
iter 71
iter 72
iter 73
iter 74
iter 75
iter 76
iter 77
iter 78
iter 79
iter 80
iter 81
iter 82
iter 83
iter 84
iter 85
iter 86
iter 87
iter 88
iter 89
iter 90
iter 91
iter 92
iter 93
iter 94
iter 95
iter 96
iter 97
iter 98
iter 99
iter 100
iter 101
iter 102
iter 103
iter 104
iter 105
iter 106
iter 107
iter 108
iter 109
iter 110
iter 111
iter 112
iter 113
iter 114
iter 115
iter 116
iter 117
iter 118
iter 119
iter 120
iter 121
iter 122
iter 123
iter 124
iter 125
iter 126
iter 127
iter 128
iter 129
iter 130
iter 131
iter 132
iter 133
iter 134
iter 135
iter 136
iter 137
iter 138
iter 139
iter 140
iter 141
iter 142
iter 143
iter 144
iter 145
iter 146
iter 147
iter 148
iter 149
[1] "Starting final clustering step"
[1] "On disease 1"
[1] "On disease 2"
[1] "On disease 3"
[1] "On disease 4"
[1] "On disease 5"
[1] "On disease 6"
[1] "On disease 7"
[1] "On disease 8"
[1] "On disease 9"
[1] "On disease 10"
> surelda_scores <- surelda_run$scores
> surelda_probs <- surelda_run$probs
> str(surelda_run)
List of 2
 $ scores: num [1:1000, 1:10] 72.31833 0 78.695 0 0.00667 ...
 $ probs : num [1:1000, 1:10] 0.818865 0 0.677842 0 0.000527 ...
> 
> 
> proc.time()
   user  system elapsed 
189.814   0.609 190.426 
